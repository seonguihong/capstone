from django.db import models

class LostItem(models.Model):
    color_set = [
        ["회색", "은색", "실버", "그레이", "gray", "크롬"],
        ["빨간색", "빨간", "빨강", "붉은", "적색", "레드", "red", "시뻘건"],
        ["주황색", "주황", "오렌지", "orange", "코랄", "피치", "peach", "chorale"],
        ["핑크색", "핑크", "분홍", "pink"],
        ["파란색", "파란", "파랑", "푸른", "청색", "남색", "곤색", "하늘", "네이비", "블루", "blue", "시퍼런", "밝은남"],
        ["보라색", "보라", "퍼플", "purple", "자주색"],
        ["노란색", "노란", "노랑", "누런", "황색", "옐로", "yellow", "엘로우", "금색"],
        ["초록색", "초록", "그린", "녹색", "연두", "민트", "green", "청록", "녹차색", "카키", "옥색"],
        ["갈색", "고동색", "브라운", "brown", "똥색", "동색", "밤색"],
        ["흰색", "하얀", "하양", "흰", "밝은", "백색", "화이트", "white", "희멀건", "창백한", "아보리", "아이보리", "베이지"],
        ["검은색", "검정", "검은", "까만", "흑색", "어두운", "블랙", "dark", "black", "까망"]
        ]

    tag_set = [
        ["휴대폰", "핸드폰", "스마트폰", "전화", "아이폰", "갤럭시폰"],
        ["지갑", "여성용지갑", "남성용지갑", "장지갑", "동전지갑", "반지갑", "카드지갑"],
        ["가방", "백팩", "크로스팩", "백", "숄더백", "핸드백", "배낭", "핸드백", "가방", "파우치", "클러치"],
        ["노트북", "맥북", "그램", "삼성노트북", "갤럭시북", "hp노트북"],
        ["이어폰", "이어폰", "에어팟", "버즈", "헤드셋", "헤드폰", "맥스", "비츠", "소니", "보스", "뱅앱올룹슨", "브리츠"],
        ["옷", "겉옷", "옷", "모자", "의류", "코트", "자켓", "점퍼", "잠바", "신발", "슬리퍼", "벨트", "밸트", "스카프", "티셔츠", "남방", "와이셔츠", "셔츠", "바지", "가디건", "맨투맨", "후드티"],
        ["신분증", "여권", "학생증", "신분증", "면허증"],
        ["악세사리", "반지", "목걸이", "시계", "안경", "선글라스", "링", "팔찌", "발찌", "귀찌", "큐빅", "귀걸이"],
        ["화장품", "립스틱", "쉐도우", "셰도우", "볼터치", "블러셔", "립밤", "틴트", "쿠션", "바세린", "팩트", "파우더"],
        ["우산", "양산", "우비", "단우산", "장우산", "접이식우산", "자동우산"],  
        ["카드", "신용카드", "교통카드", "기타카드", "체크카드"],  
        ["전자기기", "갤럭시탭", "아이패드", "갤럭시워치", "애플워치", "보조배터리", "카메라", "애플패드", "갤탭", "태블릿"], 
        ["책", "전공책", "전공서적"],
        ["악기", "기타", "베이스", "키보드", "드럼스틱"],
        ["전자담배", "전담", "아이코스", "릴"],
        ["기타", "휴대폰 케이스", "무선 이어폰 케이스", "USB", "차 키", "오토바이 키"]
        ]


    COLOR_CHOICES = [(color[0], color[0]) for color in color_set]
    TAG_CHOICES = [(tag[0], tag[0]) for tag in tag_set]

    lost_date = models.DateField(verbose_name='Lost Date')
    category = models.CharField(max_length=50, choices=TAG_CHOICES, verbose_name='Category')
    color = models.CharField(max_length=50, choices=COLOR_CHOICES, verbose_name='Color')
    name = models.CharField(max_length=100, verbose_name='Name')
    location = models.CharField(max_length=200, verbose_name='Found Location')
    image = models.ImageField(upload_to='lost_items/', blank=True, null=True, verbose_name='Image')

    def __str__(self):
        return f'{self.name} ({self.category}) - {self.lost_date}'